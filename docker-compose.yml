version: '3.9'
services:
  web:
    build: .
    container_name: telegram-crawler-web
    command: sh -c "python manage.py makemigrations --noinput && python manage.py migrate --noinput && python manage.py shell -c \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='admin').exists() or User.objects.create_superuser('admin', 'admin@example.com', 'admin')\" && python manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8000 telecrawl.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=telecrawl
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: always
  db:
    image: postgres:15
    container_name: telegram-crawler-db
    environment:
      POSTGRES_DB: telecrawl
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: always
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pentester.dad
      PGADMIN_DEFAULT_PASSWORD: S4d@aZ4Ms01
    ports:
      - "5050:80"
    depends_on:
      - db
  redis:
    image: redis:7-alpine
    container_name: telegram-crawler-redis
    ports:
      - "6379:6379"
    restart: always
  celery:
    build: .
    container_name: telegram-crawler-celery
    command: celery -A telecrawl worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=telecrawl
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: always
  celery-beat:
    build: .
    container_name: telegram-crawler-celery-beat
    command: celery -A telecrawl beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=telecrawl
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: always

volumes:
  postgres_data:
  static_volume:

